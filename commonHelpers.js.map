{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from 'izitoast'; // Бібліотека для повідомлень\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox'; // Бібліотека для галереї\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport axios from 'axios'; // Бібліотека для запитів\n\nconst inputOfWords = document.querySelector('.inputOfWords'); // Інпут\nconst buttonForInput = document.querySelector('.buttonForInput'); // Кнопка пошуку\nconst userList = document.querySelector('.userList'); // Галерея\nconst areaForLoader = document.querySelector('.areaForLoader'); // Лоадер\n\nlet wordOfUser = '';\nlet imagesLength = '';\nlet loadPage = 1;\nlet amountOfHits = 0;\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  // Великі картинки\n  captionDelay: 250,\n  captionsData: 'alt',\n});\n\nbuttonForInput.addEventListener('click', event => {\n  // Надсилання запиту на сервер  pixabay-api.js\n  loaderF();\n  event.preventDefault();\n  userList.innerHTML = '';\n  wordOfUser = inputOfWords.value.trim();\n  checkInputValidity();\n  inputOfWords.value = '';\n  if (wordOfUser !== inputOfWords.value.trim()) {\n    loadPage = 1;\n  }\n});\n\nasync function checkInputValidity() {\n  // Перевірка валідності запиту pixabay-api.js\n  return fetchImages()\n    .then(images => {\n      if (wordOfUser === '') {\n        iziToast.show({\n          color: 'red',\n          message: `Sorry, the input field must be filled in to start the photo search.`,\n          position: 'topCenter',\n        });\n      } else if (images.length === 0) {\n        iziToast.show({\n          color: 'red',\n          message: `Sorry, there are no images matching your search query. Please try again!`,\n          position: 'topCenter',\n        });\n      } else {\n        renderImg(images);\n      }\n    })\n    .catch(error => console.log(error))\n    .finally(() => spanElementRem());\n}\n\nfunction renderImg(images) {\n  // Рендар фото в браузері render-functions.js\n  imagesLength = images.length;\n\n  const markupImg = images\n    .map(image => {\n      return `<div class=\"blockForAllElements\">\n          <li>\n          <a href=${image.largeImageURL} download=\"false\">\n          <img src=${image.webformatURL} alt = \"${image.tags}\" class = \"imgOfUser\">\n          </a>\n          </li>\n          <div class = \"divForDescription\"> \n          <ul class=\"blockOfInfo\"> \n            <li class=\"title\">Likes</li>\n            <li class=\"info\">${image.likes}</li>\n          </ul>\n          <ul class=\"block\">\n            <li class=\"title\">Views</li>\n            <li class=\"info\">${image.views}</li>\n          </ul>\n          <ul class=\"block\">\n            <li class=\"title\">Comments</li>\n            <li class=\"info\">${image.comments}</li>\n          </ul>\n          <ul class=\"block\">\n            <li class=\"title\">Downloads</li>\n            <li class=\"info\">${image.downloads}</li>\n          </ul>\n          </div>\n        </div>`;\n    })\n    .join('');\n  userList.insertAdjacentHTML('beforeend', markupImg);\n  lightbox.refresh();\n  if (amountOfHits < loadPage * 15) {\n    iziToast.show({\n      color: 'red',\n      message: `We're sorry, but you've reached the end of search results.`,\n      position: 'topCenter',\n    });\n  } else if (amountOfHits < 15) {\n    iziToast.show({\n      color: 'red',\n      message: `We're sorry, but you've reached the end of search results.`,\n      position: 'topCenter',\n    });\n  } else {\n    addButtonLoad();\n    scrollByTwoImages();\n    loadPage++;\n  }\n}\n\nasync function fetchImages() {\n  // Запит на сервер для отримання даних про фотографії pixabay-api.js\n  const myApiKey = '42977219-0f6c9f9217f976d8651793c3a';\n  const params = {\n    key: myApiKey,\n    q: wordOfUser,\n    image_type: 'photo',\n    per_page: 15,\n    orientation: 'horizontal',\n    safesearch: true,\n    page: loadPage,\n  };\n\n  const data = await axios\n    .get('https://pixabay.com/api/', { params })\n    .then(response => {\n      if (!response.data.hits) {\n        throw new Error('No images found');\n      }\n      const totalHits = response.data.totalHits;\n      amountOfHits = totalHits;\n      return response.data.hits;\n    })\n    .catch(error => {\n      console.error('Error fetching images:', error);\n      throw error;\n    });\n\n  return data;\n}\n\nfunction loaderF() {\n  // Створюємо лоадер render-functions.js\n  const spanElement = document.createElement('span');\n  areaForLoader.appendChild(spanElement);\n  spanElement.classList.add('loader');\n}\n\nfunction spanElementRem() {\n  // Видаляємо лоадер render-functions.js\n  const loaderF = document.querySelector('.loader');\n  loaderF.remove();\n}\n\nfunction addButtonLoad() {\n  // Кнопка лоад море\n\n  const buttonLoad = document.createElement('button');\n  userList.appendChild(buttonLoad);\n  buttonLoad.classList.add('buttonForLoad');\n  buttonLoad.textContent = 'Load more';\n\n  buttonLoad.addEventListener('click', event => {\n    loaderF();\n    event.preventDefault();\n    buttonLoad.textContent = 'Loading...';\n    wordOfUser;\n    checkInputValidity();\n    buttonLoad.remove();\n  });\n}\n\nfunction scrollByTwoImages() {\n  // Прокрутка на 2 картинки вниз\n  const blockForAllElements = document.querySelectorAll('.blockForAllElements');\n  if (blockForAllElements.length > 0) {\n    const blockHeight = blockForAllElements[0].offsetHeight;\n    window.scrollBy({\n      top: blockHeight * 2,\n      behavior: 'smooth',\n    });\n  }\n}\n"],"names":["inputOfWords","buttonForInput","userList","areaForLoader","wordOfUser","loadPage","amountOfHits","lightbox","SimpleLightbox","event","loaderF","checkInputValidity","fetchImages","images","iziToast","renderImg","error","spanElementRem","markupImg","image","addButtonLoad","scrollByTwoImages","params","axios","response","spanElement","buttonLoad","blockForAllElements","blockHeight"],"mappings":"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"}